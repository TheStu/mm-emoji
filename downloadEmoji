#!/usr/bin/env ruby

# Mattermost Slack Emoji Transfer Tool

# Copyright (c) 2023 Maxwell Power
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
# AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

require 'json'
require 'open-uri'

# Check if the emoji.list file exists
unless File.exist?("emoji.list")
  puts "The emoji.list file does not exist. Exiting..."
  exit
end

# Check if the emoji.list file is empty
if File.zero?("emoji.list")
  puts "The emoji.list file is empty. Exiting..."
  exit
end

# Parse the JSON data from the emoji.list file
begin
  j = JSON.parse(File.read("emoji.list"))
rescue JSON::ParserError => e
  puts "Failed to parse JSON: #{e.message}. Exiting..."
  exit
end

def target_filename(name, url)
  "#{name}#{File.extname(url)}"
end

# Select emojis that are not aliases
slackEmojis = j["emoji"].select { |k, v| !(v =~ /alias/) }

# Download each emoji using its URL
slackEmojis.each do |k, v|
  begin
    URI.open(v) do |emoji|
      filename = target_filename(k, v)
      File.open(filename, "wb") do |file|
        file.write(emoji.read)
      end
      puts "#{filename}"
    end
  rescue => e
    puts "Failed to download emoji #{k} from URL #{v}: #{e.message}"
  end
end

puts "Download completed with possible errors logged above."
