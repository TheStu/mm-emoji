#!/usr/bin/env bash

# Mattermost Slack Emoji Transfer Tool

# Copyright (c) 2023 Maxwell Power
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
# AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

function _checkCredentials() {
  if [ -z "$MM_MFA_TOKEN" ] && [ -z "$MM_TOKEN" ] && [ -z "$MM_PASSWORD" ]; then
    echo "Error: Neither MM_MFA_TOKEN, MM_TOKEN, nor MM_PASSWORD is set. Please set at least one of them."
    exit 1
  fi

  if [ -z "$MM_MFA_TOKEN" ] && [ -z "$MM_TOKEN" ] && [ -z "$MM_PASSWORD" ]; then
    echo "Error: Neither MM_MFA_TOKEN, MM_TOKEN, nor MM_PASSWORD is set. Please set at least one of them."
    exit 1
  fi
}

function _usage() {
  printf "Usage: $0 [run|get|clean|download|resize|upload|help]\n"
  printf "\n"
  printf "run:      Get Emojies from Slack and Upload to Mattermost\n"
  printf "get:      Get Emojies from Slack\n"
  printf "clean:    Remove Mattermost System Emoji's\n"
  printf "download: Download Emojies from Slack\n"
  printf "resize:   Resize Emojies\n"
  printf "upload:   Upload Emojies to Mattermost\n"
  printf "help:     Show this help message\n"
  printf "\n"
  printf "Example:\n"
  printf "  $0 run\n"
  printf "\n"
}

function _getEmojiesList() {
  echo "Getting Emoji List ..."
  curl -O -s --header "Authorization: Bearer $SLACK_TOKEN" "https://slack.com/api/emoji.list"
}

function _downloadEmojies() {
  echo "Downloading Emojis from Slack ..."
  downloadEmoji
}

function _cleanEmojies() {
  echo "Removing Mattermost System Emoji's ..."
  cleanSystemEmoji
}

function _resizeEmojies() {
  echo "Resizing Emojis ..."
  resizeEmoji
}

function _uploadEmojies() {
  echo "Uploading Emojis to Mattermost ..."
  echo "This might take a while depending on how many emojis you have"
  echo "You can watch the emoji selection dialogue in Mattermost to see if they are uploading"
  echo "Please wait ..."

  # Start the mmemoji create command in the background
  mmemoji create -o json -n *.{gif,jpg,png} &
  MMEMOJI_PID=$!

  # Display a simple animated progress bar while the mmemoji create command is running
  while kill -0 $MMEMOJI_PID 2>/dev/null; do
    echo -n '.'
    sleep 1
  done

  # Wait for the mmemoji create command to finish
  wait $MMEMOJI_PID

  echo "DONE Uploading Emojis to Mattermost"
  echo "Check your Mattermost install to ensure they have copied successfully"
  echo "An API error above may not indicate upload failure and may be ignored"
}

if [ "$1" == 'run' ]; then

  # Check to ensure credentials are set
  _checkCredentials

  echo "Getting Emojies from Slack and Uploading to Mattermost"

  _getEmojiesList
  if [ $? -ne 0 ]; then
    echo "Error getting emoji list from Slack"
    exit 1
  fi

  _downloadEmojies
  if [ $? -ne 0 ]; then
    echo "Error downloading emojis from Slack"
    exit 1
  fi

  _cleanEmojies
  if [ $? -ne 0 ]; then
    echo "Error cleaning emojis"
    exit 1
  fi

  _resizeEmojies
  if [ $? -ne 0 ]; then
    echo "Error resizing emojis"
    exit 1
  fi

  _uploadEmojies
  if [ $? -ne 0 ]; then
    echo "Error uploading emojis to Mattermost"
    exit 1
  fi
  exit 0
elif [ "$1" == 'get' ]; then
  _checkCredentials
  _getEmojiesList
  cat emoji.list
  exit 0
elif [ "$1" == 'download' ]; then
  _downloadEmojies
  ls
  exit 0
elif [ "$1" == 'clean' ]; then
  _cleanEmojies
  exit 0
elif [ "$1" == 'resize' ]; then
  _resizeEmojies
  exit 0
elif [ "$1" == 'upload' ]; then
  _checkCredentials
  _uploadEmojies
elif [ "$1" == 'help' ] OR ["$1" == 'usage']; then
  _usage
  exit 0
else
  _usage
  exit 1
fi
